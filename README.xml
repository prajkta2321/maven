 # 🎨 Graphics Design Manager

A simple Java console application using **Jakarta Persistence (JPA)** to manage Designers, Projects, and Tools for a digital design studio.

## 📦 Features

- Add new **Designers**, **Projects**, and **Tools**
- Assign Tools to Projects
- View all Projects with associated information
- Persistent storage using **JPA** (Jakarta Persistence API)

## 🛠️ Technologies Used

- Java
- JPA (Jakarta Persistence API)
- Hibernate (as JPA implementation)
- H2 / MySQL / other JPA-supported databases (configurable via `persistence.xml`)
- Maven (recommended for dependency management)

🖥 Example Menu

🎨 Graphics Design Manager
1. Add Designer
2. Add Project
3. Add Tool
4. Assign Tool to Project
5. View Projects
0. Exit

## 🧰 Entities

### 👤 Designer
- `id` (auto-generated)
- `name`
- `specialty`

### 🗂️ Project
- `id` (auto-generated)
- `title`
- `designer` (Many-to-One)
- `tools` (Many-to-Many)

### 🧪 Tool
- `id` (auto-generated)
- `name`
- `version`

📁 Project Structure
css
Copy code
graphics-design-manager/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── app/
│   │   │       └── Main.java
│   │   │
│   │   │   └── entity/
│   │   │       ├── Designer.java
│   │   │       ├── Project.java
│   │   │       └── Tool.java
│   │   │
│   │   └── resources/
│   │       └── META-INF/
│   │           └── persistence.xml
│   │
│   └── test/
│       └── java/
│           └── (optional test classes)
│
├── .gitignore
├── pom.xml
└── README.md

📦 Maven Dependencies

<dependencies>

    <dependency>
        <groupId>jakarta.persistence</groupId>
        <artifactId>jakarta.persistence-api</artifactId>
        <version>3.1.0</version>
    </dependency>
    <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>6.2.7.Final</version>
    </dependency>
    <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>2.2.224</version>
    </dependency>
</dependencies>

🗄 Database Schema

•	designer
•	project
•	tool
•	project_tools (join table for many-to-many)

🧑 designer
sql
Copy code
CREATE TABLE designer (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    specialty VARCHAR(255)
);
📁 project
sql
Copy code
CREATE TABLE project (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    designer_id INTEGER,
    FOREIGN KEY (designer_id) REFERENCES designer(id)
);
🛠 tool
sql
Copy code
CREATE TABLE tool (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    version VARCHAR(255)
);
🔗 project_tools (join table)
sql
Copy code
CREATE TABLE project_tools (
    project_id INTEGER,
    tool_id INTEGER,
    PRIMARY KEY (project_id, tool_id),
    FOREIGN KEY (project_id) REFERENCES project(id),
    FOREIGN KEY (tool_id) REFERENCES tool(id)
);


📞Contact:-
For any questions or feedback, feel free to reach out:

Your Name : prajkta more,Pornima kavade

Email: prajktamore63@gmail.com

GitHub: 

## 🚀 Getting Started